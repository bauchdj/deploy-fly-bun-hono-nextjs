services:
    # Database Service
    db:
        image: postgres:16
        container_name: nimbus-test-db-root-compose
        restart: unless-stopped
        env_file: .env
        environment:
            POSTGRES_USER: ${POSTGRES_USER:-postgres}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
            POSTGRES_DB: ${POSTGRES_DB:-nimbus}
        ports:
            - "5432:5432"
        volumes:
            - postgres-data:/var/lib/postgresql/data
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U postgres"]
            interval: 10s
            timeout: 5s
            retries: 5
        networks:
            - nimbus-network

    # Server Service
    server:
        build:
            context: .
            dockerfile: apps/server/Dockerfile
        container_name: nimbus-test-server-root-compose
        restart: unless-stopped
        env_file: .env
        environment:
            NODE_ENV: production
            DATABASE_URL: postgres://postgres:postgres@db:5432/nimbus
            DATABASE_HOST: db
        ports:
            - "${SERVER_PORT:-8080}:${SERVER_PORT:-8080}"
        depends_on:
            db:
                condition: service_healthy
        networks:
            - nimbus-network

    # Web Service
    web:
        build:
            context: .
            dockerfile: apps/web/Dockerfile
        container_name: nimbus-test-web-root-compose
        restart: unless-stopped
        env_file: .env
        environment:
            NODE_ENV: production
        ports:
            - "${WEB_PORT:-3000}:${WEB_PORT:-3000}"
        depends_on:
            - server
        networks:
            - nimbus-network

volumes:
    postgres-data:
        name: nimbus-test-db-root-compose-postgres-data

networks:
    nimbus-network:
        driver: bridge
